name: Build & Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-store
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-store.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./src-tauri -> target"

      - name: Install dependencies
        run: pnpm install
      
      - name: Get version
        id: get_version
        shell: bash
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "Version is $VERSION"

      - name: Build project
        env:
          GITHUB_ACTIONS: true
        run: pnpm tauri build

      # Upload build artifacts for testing
      - name: Upload Executable (Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ReinaManager-${{ steps.get_version.outputs.VERSION }}-win_x64-exe
          path: src-tauri/target/release/ReinaManager.exe
          if-no-files-found: warn

      - name: Upload MSI Installer (Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ReinaManager-${{ steps.get_version.outputs.VERSION }}-win_x64-msi
          path: src-tauri/target/release/bundle/msi/*.msi
          if-no-files-found: warn

      - name: Upload NSIS Installer (Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ReinaManager-${{ steps.get_version.outputs.VERSION }}-win_x64-setup
          path: src-tauri/target/release/bundle/nsis/*.exe
          if-no-files-found: warn
